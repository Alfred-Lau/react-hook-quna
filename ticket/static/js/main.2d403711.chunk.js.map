{"version":3,"sources":["common/header.jsx","index/components/TimeSelect.jsx","utils/index.js","index/components/AddressSelect.jsx","index/components/Submit.jsx","index/components/SingleSelect.jsx","common/CityTreeSelect.jsx","index/App.jsx","store/actions.js","store/reducers.js","store/store.js","index/index.js"],"names":["Header","props","goBack","title","className","onClick","width","height","points","stroke","strokeWidth","fill","TimeSelect","time","month","Date","getMonth","day","getDay","formatTime","weekday","getDate","formatWeek","toDateString","isToday","AddressSelect","from","to","exchangeFromTo","toggleSelector","Submit","onSubmit","SingleSelect","type","AlphaIndex","name","handleClick","AlphaBet","dataSource","Array","v","i","String","fromCharCode","map","item","City","CitySection","section","handleSelect","CityList","cityData","data-cate","citys","CityTreeSelect","cityVisible","isLoading","useState","searchKey","setSearchKey","result","setResult","key","useMemo","trim","citySelector","classnames","hidden","handleClickAlpha","useCallback","document","querySelector","scrollIntoView","useEffect","fetch","then","value","json","cityList","placeholder","onChange","e","target","length","connect","state","dispatch","setCityVisible","isCityLoading","getTime","window","history","back","handleSubmit","handleVisible","console","log","getState","payload","setFrom","setTo","action","createStore","combineReducers","reducers","applyMiddleware","thunk","ReactDOM","render","store","path","getElementById"],"mappings":"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","file":"static/js/main.2d403711.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './header.css';\n\nconst Header = (props) => {\n  const { goBack, title } = props;\n\n  return (\n    <div className=\"header\">\n      <div className=\"goBack\" onClick={goBack}>\n        <svg width=\"42\" height=\"42\">\n          <polyline\n            points=\"25,13 16,21 25,29\"\n            stroke=\"#fff\"\n            strokeWidth=\"2\"\n            fill=\"none\"\n          />\n        </svg>\n      </div>\n      <div className=\"title\">{title}</div>\n    </div>\n  );\n};\n\nHeader.propTypes = {\n  title: PropTypes.string.isRequired,\n  goBack: PropTypes.func.isRequired,\n};\n\nexport default Header;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { formatTime, formatWeek, isToday } from '../../utils';\nimport './timeSelect.css';\n\nexport default function TimeSelect(props) {\n  const { time } = props;\n\n  return (\n    <div className=\"time-select\">\n      <span className=\"time\">{formatTime(time)}</span>\n      <span className=\"week\">{formatWeek(time)}</span>\n      {isToday(time) ? <span className=\"extra\">(今天)</span> : null}\n    </div>\n  );\n}\n\nTimeSelect.propTypes = {\n  time: PropTypes.number.isRequired,\n};\n","export const formatTime = (time) => {\n  const month = new Date(time).getMonth();\n  const day = new Date(time).getDay();\n  return `${month}月${day}日`;\n};\n\nexport const formatWeek = (time) => {\n  const week = new Date(time).getDate();\n  let weekday;\n  switch (week) {\n    case 1:\n      weekday = '周一';\n      break;\n    case 2:\n      weekday = '周二';\n      break;\n    case 3:\n      weekday = '周三';\n      break;\n    case 4:\n      weekday = '周四';\n      break;\n    case 5:\n      weekday = '周五';\n      break;\n    case 6:\n      weekday = '周六';\n      break;\n    case 7:\n      weekday = '周日';\n      break;\n    default:\n      break;\n  }\n  return weekday;\n};\n\nexport const isToday = (time) => {\n  return new Date().toDateString() === new Date(time).toDateString();\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './addressSelect.css';\nexport default function AddressSelect(props) {\n  const { from, to, exchangeFromTo, toggleSelector } = props;\n\n  return (\n    <div className=\"addressSelect\">\n      <span className=\"target\" onClick={toggleSelector}>\n        {from}\n      </span>\n      <span className=\"target\" onClick={exchangeFromTo}>\n        <i className=\"iconfont exchange\">&#xe618;</i>\n      </span>\n      <span className=\"destination\" onClick={toggleSelector}>\n        {to}\n      </span>\n    </div>\n  );\n}\n\nAddressSelect.propTypes = {\n  from: PropTypes.string.isRequired,\n  to: PropTypes.string.isRequired,\n  exchangeFromTo: PropTypes.func.isRequired,\n  toggleSelector: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './button.css';\n\nexport default function Submit(props) {\n  const { title, onSubmit } = props;\n\n  return (\n    <div className=\"search-btn\" onClick={onSubmit}>\n      {title}\n    </div>\n  );\n}\n\nSubmit.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  title: PropTypes.string.isRequired,\n};\n","import React from 'react';\n\nimport './singleSelect.css';\n\nexport default function SingleSelect(props) {\n  return (\n    <div className=\"singleSelect\">\n      <div className=\"left\">\n        <input type=\"checkbox\" className=\"left-checkbox\" />\n        <span className=\"text\">只看高铁动车</span>\n      </div>\n      <div className=\"right\">\n        <input type=\"checkbox\" className=\"right-checkbox\" />\n        <span className=\"text\">学生票</span>\n      </div>\n    </div>\n  );\n}\n","import React, { useState, useMemo, useEffect, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nimport './cityTreeSelect.less';\n\nfunction SuggestItem(props) {\n  const { name } = props;\n}\n\nfunction AlphaIndex(props) {\n  const { name, handleClick } = props;\n  return (\n    <li className=\"alpha-item\" onClick={() => handleClick(name)}>\n      {name}\n    </li>\n  );\n}\n\nAlphaIndex.propTypes = {\n  name: PropTypes.string.isRequired,\n  handleClick: PropTypes.func.isRequired,\n};\n\nfunction AlphaBet(props) {\n  const { handleClick } = props;\n  const dataSource = Array.from(Array(26), (v, i) => {\n    return String.fromCharCode(i + 65);\n  });\n\n  return (\n    <div className=\"alpha-bet\">\n      {dataSource.map((item) => {\n        return <AlphaIndex name={item} handleClick={handleClick}></AlphaIndex>;\n      })}\n    </div>\n  );\n}\n\nAlphaBet.propTypes = {\n  name: PropTypes.string.isRequired,\n  handleClick: PropTypes.func.isRequired,\n};\nfunction City(props) {\n  const { name, handleClick } = props;\n  return (\n    <li onClick={() => handleClick(name)} className=\"city\">\n      {name}\n    </li>\n  );\n}\n\nCity.propTypes = {\n  name: PropTypes.string.isRequired,\n  handleClick: PropTypes.func.isRequired,\n};\n\nfunction CitySection(props) {\n  const { section, handleSelect } = props;\n  return (\n    <ul className=\"city-section\">\n      {section.map((item) => {\n        return <City name={item.name} handleClick={handleSelect}></City>;\n      })}\n    </ul>\n  );\n}\n\nCitySection.propTypes = {\n  section: PropTypes.array.isRequired,\n  handleSelect: PropTypes.func.isRequired,\n};\n\nfunction CityList(props) {\n  const { handleSelect, cityData } = props;\n\n  return (\n    <div className=\"city-list\">\n      {cityData.map((item) => {\n        return (\n          <div className=\"city-content\" data-cate={item.title}>\n            <div className=\"city-title\">{item.title}</div>\n            <CitySection\n              section={item.citys || []}\n              handleSelect={handleSelect}\n            ></CitySection>\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n\nCityList.propTypes = {\n  handleSelect: PropTypes.func.isRequired,\n  cityData: PropTypes.array.isRequired,\n};\n\nexport default function CityTreeSelect(props) {\n  const { cityData, cityVisible, handleSelect, goBack, isLoading } = props;\n\n  const [searchKey, setSearchKey] = useState('');\n  const [result, setResult] = useState([]);\n  const key = useMemo(() => searchKey.trim(), [searchKey]);\n\n  const citySelector = classnames('city-selector', {\n    hidden: !cityVisible,\n  });\n\n  const handleClickAlpha = useCallback((name) => {\n    //处理点击跳转\n    document.querySelector(`[data-cate=${name}]`).scrollIntoView();\n  }, []);\n\n  useEffect(() => {\n    if (!cityVisible || cityData || isLoading) {\n      fetch('/rest/cities')\n        .then((value) => {\n          return value.json();\n        })\n        .then((value) => {\n          const { cityList } = value;\n          setResult(cityList);\n        });\n    }\n  }, [cityData, cityVisible, isLoading]);\n  return (\n    <div className={citySelector}>\n      <div className=\"city-search\">\n        <div className=\"search-back\" onClick={() => goBack()}>\n          <svg width=\"42\" height=\"42\">\n            <polyline\n              points=\"25,13 16,21 25,29\"\n              stroke=\"#fff\"\n              strokeWidth=\"2\"\n              fill=\"none\"\n            />\n          </svg>\n        </div>\n        <div className=\"search-input-wrapper\">\n          <input\n            type=\"text\"\n            value={searchKey}\n            className=\"search-input\"\n            placeholder=\"城市、车站的中文或拼音\"\n            onChange={(e) => setSearchKey(e.target.value)}\n          />\n        </div>\n        <i\n          onClick={() => setSearchKey('')}\n          className={classnames('search-clean', {\n            hidden: key.length === 0,\n          })}\n        >\n          &#xf063;\n        </i>\n      </div>\n      <CityList cityData={result} handleSelect={handleSelect}></CityList>\n      <AlphaBet handleClick={handleClickAlpha}></AlphaBet>\n    </div>\n  );\n}\n\nCityTreeSelect.propTypes = {\n  cityData: PropTypes.object.isRequired,\n  cityVisible: PropTypes.bool.isRequired,\n  handleSelect: PropTypes.func.isRequired,\n  goBack: PropTypes.func.isRequired,\n  isLoading: PropTypes.bool.isRequired,\n};\n","import React, { useCallback, useState } from 'react';\nimport { connect } from 'react-redux';\nimport './App.css';\n\nimport Header from '../common/header';\n\nimport TimeSelect from './components/TimeSelect';\nimport AddressSelect from './components/AddressSelect';\nimport Submit from './components/Submit';\nimport SingleSelect from './components/SingleSelect';\n\nimport CityTreeSelect from '../common/CityTreeSelect';\n\nimport { exchangeFromTo } from '../store/actions';\n\nconst App = function (props) {\n  const { from, to, dispatch } = props;\n\n  const [cityVisible, setCityVisible] = useState(false);\n  const [isCityLoading, setIsCityLoading] = useState(false);\n\n  const [time, setTime] = useState(new Date().getTime());\n  /* 为了避免每次创建新的函数句柄生成造成重新渲染，我们需要使用 useE 把函数的使用包起来 ,这样保证函数只会生成一次，进而 Header 组件只会渲染一次*/\n  const goBack = useCallback(() => {\n    window.history.back();\n  }, []);\n\n  const handleSubmit = useCallback(() => {\n    //我要提交\n  }, []);\n  const handleVisible = useCallback(() => {\n    setCityVisible(!cityVisible);\n  }, [cityVisible]);\n\n  const handleSelect = useCallback(\n    (name) => {\n      // 处理弹窗城市选择\n      console.log('name', name);\n      handleVisible();\n    },\n    [handleVisible]\n  );\n\n  return (\n    <>\n      <Header title=\"火车票\" goBack={goBack}></Header>\n      <div className=\"bg-image\"></div>\n      <div className=\"search-box\">\n        <AddressSelect\n          exchangeFromTo={() => dispatch(exchangeFromTo())}\n          from={from}\n          to={to}\n          toggleSelector={handleVisible}\n        ></AddressSelect>\n        <TimeSelect time={time}></TimeSelect>\n        <SingleSelect></SingleSelect>\n        <Submit title=\"搜索\" onSubmit={handleSubmit}></Submit>\n      </div>\n      <CityTreeSelect\n        cityData={{}}\n        cityVisible={cityVisible}\n        handleSelect={handleSelect}\n        goBack={handleVisible}\n        isLoading={isCityLoading}\n      ></CityTreeSelect>\n    </>\n  );\n};\n\nexport default connect(\n  function mapStateToProps(state) {\n    return state;\n  },\n  function mapDispatchToProps(dispatch) {\n    return { dispatch };\n  }\n)(App);\n","export const ACTION_SET_FROM = 'SET_FROM';\nexport const ACTION_SET_TO = 'SET_TO';\n\nexport function setFrom(from) {\n  return {\n    type: ACTION_SET_FROM,\n    payload: from,\n  };\n}\n\nexport function setTo(to) {\n  return {\n    type: ACTION_SET_TO,\n    payload: to,\n  };\n}\n\nexport function exchangeFromTo() {\n  return (dispatch, getState) => {\n    const { from, to } = getState();\n    dispatch(setFrom(to));\n    dispatch(setTo(from));\n  };\n}\n","import { ACTION_SET_FROM, ACTION_SET_TO } from './actions';\n\nexport default {\n  from(state = '北京', action) {\n    const { type, payload } = action;\n    switch (type) {\n      case ACTION_SET_FROM:\n        return payload;\n      default:\n        break;\n    }\n\n    return state;\n  },\n\n  to(state = '上海', action) {\n    const { type, payload } = action;\n    switch (type) {\n      case ACTION_SET_TO:\n        return payload;\n\n      default:\n        break;\n    }\n\n    return state;\n  },\n};\n","import { createStore, applyMiddleware, combineReducers } from 'redux';\n\nimport reducers from './reducers';\nimport thunk from 'redux-thunk';\n\nconst initialState = {\n  from: '上海',\n  to: '北京',\n  // isCitySelectorVisible: false,\n};\n\nexport default createStore(\n  combineReducers(reducers),\n  initialState,\n  applyMiddleware(thunk)\n);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport {\n  // BrowserRouter as Router,\n  HashRouter as Router,\n  Route,\n  Switch,\n  Redirect,\n} from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport store from \"../store/store\";\n\nimport \"normalize.css/normalize.css\";\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <Switch>\n        <Route path=\"/home\">\n          <App />\n        </Route>\n      </Switch>\n      <Redirect to=\"/home\"></Redirect>\n    </Router>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}